/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mysqltonetbeans;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author LENOVO
 */
public class users extends javax.swing.JFrame {
    Connection conn = null;
    PreparedStatement ps = null;
    ResultSet rs = null;

    /**
     * Creates new form users
     */
    public users() {
        initComponents();
        conn = Mysqltonetbeans.connecmysqldb();
        users_Table();
    }
    
    public void users_Table(){
        try{
            String sql = "SELECT * FROM users";
            ps = conn.prepareStatement(sql);
            rs = ps.executeQuery();
            tbl_user.setModel(DbUtils.resultSetToTableModel(rs));
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        btn_enter = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btn_searchid = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        btn_searchuser = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txt_iduser = new javax.swing.JTextField();
        txt_username = new javax.swing.JTextField();
        txt_fullname = new javax.swing.JTextField();
        txt_password = new javax.swing.JPasswordField();
        cmb_role = new javax.swing.JComboBox<>();
        btn_delete = new javax.swing.JButton();
        btn_edit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_user = new javax.swing.JTable();
        btn_logout = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        mn_user = new javax.swing.JMenuItem();
        mn_produk = new javax.swing.JMenuItem();
        mn_transaksi = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 204, 204));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Data User", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N
        jPanel1.setForeground(new java.awt.Color(255, 204, 204));

        jLabel2.setText("ID User");

        btn_enter.setBackground(new java.awt.Color(255, 204, 255));
        btn_enter.setText("Add");
        btn_enter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_enterActionPerformed(evt);
            }
        });

        jLabel3.setText("Username");

        btn_searchid.setBackground(new java.awt.Color(255, 204, 255));
        btn_searchid.setText("Find By ID");
        btn_searchid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_searchidActionPerformed(evt);
            }
        });

        jLabel4.setText("Password");

        btn_searchuser.setBackground(new java.awt.Color(255, 204, 255));
        btn_searchuser.setText("Find By Username");
        btn_searchuser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_searchuserActionPerformed(evt);
            }
        });

        jLabel5.setText("Peran");

        jLabel6.setText("Nama Lengkap");

        txt_iduser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_iduserActionPerformed(evt);
            }
        });

        cmb_role.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cashier", "Admin", "Manager" }));
        cmb_role.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                cmb_roleComponentAdded(evt);
            }
        });
        cmb_role.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_roleActionPerformed(evt);
            }
        });

        btn_delete.setBackground(new java.awt.Color(255, 204, 255));
        btn_delete.setText("Delete");
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });

        btn_edit.setBackground(new java.awt.Color(255, 204, 255));
        btn_edit.setText("Edit");
        btn_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btn_edit)
                        .addGap(18, 18, 18)
                        .addComponent(btn_delete)
                        .addGap(18, 18, 18)
                        .addComponent(btn_enter))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(42, 42, 42))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txt_fullname)
                            .addComponent(cmb_role, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_password, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_iduser)
                                    .addComponent(txt_username, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btn_searchuser)
                                    .addComponent(btn_searchid, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_iduser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_searchid))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_searchuser))
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmb_role, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txt_fullname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_enter)
                    .addComponent(btn_delete)
                    .addComponent(btn_edit))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        tbl_user.setBorder(new javax.swing.border.MatteBorder(null));
        tbl_user.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbl_user.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_userMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_user);

        btn_logout.setBackground(new java.awt.Color(255, 204, 255));
        btn_logout.setText("Logout");
        btn_logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_logoutActionPerformed(evt);
            }
        });

        jMenuBar1.setBackground(new java.awt.Color(255, 204, 204));

        jMenu1.setText("Kasir");
        jMenuBar1.add(jMenu1);

        jMenu4.setText("Data");

        mn_user.setText("User");
        mn_user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mn_userActionPerformed(evt);
            }
        });
        jMenu4.add(mn_user);

        mn_produk.setText("Produk");
        mn_produk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mn_produkActionPerformed(evt);
            }
        });
        jMenu4.add(mn_produk);

        mn_transaksi.setText("Transaksi");
        mn_transaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mn_transaksiActionPerformed(evt);
            }
        });
        jMenu4.add(mn_transaksi);

        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_logout))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(28, 28, 28))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(7, Short.MAX_VALUE)
                .addComponent(btn_logout)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>                        

    private void txt_iduserActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    private void btn_enterActionPerformed(java.awt.event.ActionEvent evt) {                                          
        if(txt_iduser.getText().equals("") || txt_username.getText().equals("") || 
            txt_password.getText().equals("") || cmb_role.getSelectedItem() == null || 
            txt_fullname.getText().equals("")) 
         {
             JOptionPane.showMessageDialog(null, "All Data is required, please enter all data needed");
             resetForm();
         } else {
             try {
                 String id = txt_iduser.getText();
                 String username = txt_username.getText();
                 String password = new String(txt_password.getPassword());
                 String peran = cmb_role.getSelectedItem().toString();
                 String fullname = txt_fullname.getText();

                 String sql = "INSERT INTO users (user_id, username, password, peran, full_name) VALUES (?, ?, ?, ?, ?)";
                 ps = conn.prepareStatement(sql);
                 ps.setString(1, id);
                 ps.setString(2, username);
                 ps.setString(3, password);
                 ps.setString(4, peran);
                 ps.setString(5, fullname);

                 ps.executeUpdate(); // Menggunakan executeUpdate() untuk INSERT
                 JOptionPane.showMessageDialog(null, "Data inserted successfully");

                 users_Table();
                 resetForm();
             } catch (Exception e) {
                 JOptionPane.showMessageDialog(null, e);
             }
         }
    }                                         

    private void resetForm() {
        txt_iduser.setText("");
        txt_username.setText("");
        txt_password.setText("");
        cmb_role.setSelectedIndex(-1); // Set to -1 untuk mereset ComboBox
        txt_fullname.setText("");
    }
    
    
    private void cmb_roleComponentAdded(java.awt.event.ContainerEvent evt) {                                        
        // TODO add your handling code here:
    }                                       

    private void cmb_roleActionPerformed(java.awt.event.ActionEvent evt) {                                         
        if (cmb_role.getSelectedItem() != null) {
            String selectedRole = cmb_role.getSelectedItem().toString();
            System.out.println("Selected Role: " + selectedRole);
        }
    }                                        

    private void btn_searchidActionPerformed(java.awt.event.ActionEvent evt) {                                             
        if (txt_iduser.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Masukkan ID User untuk mencari data.");
        } else {
            try {
                String sql = "SELECT * FROM users WHERE user_id = ?";
                ps = conn.prepareStatement(sql);
                ps.setString(1, txt_iduser.getText());
                rs = ps.executeQuery();

                if (rs.next()) {
                    txt_iduser.setText(rs.getString("user_id"));
                    txt_username.setText(rs.getString("username"));
                    txt_password.setText(rs.getString("password"));
                    cmb_role.setSelectedItem(rs.getString("peran"));
                    txt_fullname.setText(rs.getString("full_name"));
                } else {
                    JOptionPane.showMessageDialog(null, "Data tidak ditemukan.");
                    resetForm();
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }                                            

    private void tbl_userMouseClicked(java.awt.event.MouseEvent evt) {                                      
        int selectedRow = tbl_user.getSelectedRow();

        if (selectedRow != -1){
    
            // Mendapatkan nilai dari setiap kolom di baris yang dipilih
            String user_id = (tbl_user.getValueAt(selectedRow, 0) != null) ? tbl_user.getValueAt(selectedRow, 0).toString() : "";
            String username = (tbl_user.getValueAt(selectedRow, 1) != null) ? tbl_user.getValueAt(selectedRow, 1).toString() : "";
            String password = (tbl_user.getValueAt(selectedRow, 2) != null) ? tbl_user.getValueAt(selectedRow, 2).toString() : "";
            String peran = (tbl_user.getValueAt(selectedRow, 3) != null) ? tbl_user.getValueAt(selectedRow, 3).toString() : "";
            String full_name = (tbl_user.getValueAt(selectedRow, 4) != null) ? tbl_user.getValueAt(selectedRow, 4).toString() : "";

            txt_iduser.setText(user_id);
            txt_username.setText(username);
            txt_password.setText(password);
            cmb_role.setSelectedItem(peran);
            txt_fullname.setText(full_name);
        } else {
            JOptionPane.showMessageDialog(null, "Tidak ada baris yang dipilih");
        }
    }                                     

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {                                           
        if (txt_iduser.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Pilih data yang akan dihapus dari tabel terlebih dahulu.");
        } else {
            int confirmation = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin menghapus data ini?", 
                    "Konfirmasi Hapus", JOptionPane.YES_NO_OPTION);

            if (confirmation == JOptionPane.YES_OPTION) {
                try {
                    String id = txt_iduser.getText();

                    String sql = "DELETE FROM users WHERE user_id = ?";
                    ps = conn.prepareStatement(sql);
                    ps.setString(1, id);

                    int rowsAffected = ps.executeUpdate();

                    if (rowsAffected > 0) {
                        JOptionPane.showMessageDialog(null, "Data berhasil dihapus.");
                        users_Table(); // Refresh tabel
                        resetForm(); // Reset form
                    } else {
                        JOptionPane.showMessageDialog(null, "Data tidak ditemukan atau gagal dihapus.");
                    }

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }
            }
        }
    }                                          

    private void btn_searchuserActionPerformed(java.awt.event.ActionEvent evt) {                                               
        if (txt_username.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Masukkan Username untuk mencari data.");
        } else {
            try {
                String sql = "SELECT * FROM users WHERE username = ?";
                ps = conn.prepareStatement(sql);
                ps.setString(1, txt_username.getText());
                rs = ps.executeQuery();

                if (rs.next()) {
                    txt_iduser.setText(rs.getString("user_id"));
                    txt_username.setText(rs.getString("username"));
                    txt_password.setText(rs.getString("password"));
                    cmb_role.setSelectedItem(rs.getString("peran"));
                    txt_fullname.setText(rs.getString("full_name"));
                } else {
                    JOptionPane.showMessageDialog(null, "Data tidak ditemukan.");
                    resetForm();
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }                                              

    private void btn_editActionPerformed(java.awt.event.ActionEvent evt) {                                         
        if (txt_iduser.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Masukkan ID User untuk mengedit data.");
        } else {
            try {
                String sql = "UPDATE users SET username = ?, password = ?, peran = ?, full_name = ? WHERE user_id = ?";
                ps = conn.prepareStatement(sql);
                ps.setString(1, txt_username.getText());
                ps.setString(2, txt_password.getText());
                ps.setString(3, cmb_role.getSelectedItem().toString());
                ps.setString(4, txt_fullname.getText());
                ps.setString(5, txt_iduser.getText());

                int rowsUpdated = ps.executeUpdate();
                if (rowsUpdated > 0) {
                    JOptionPane.showMessageDialog(null, "Data berhasil diperbarui.");
                    users_Table();
                    resetForm(); // Mengosongkan form setelah update
                } else {
                    JOptionPane.showMessageDialog(null, "Data tidak ditemukan untuk ID User tersebut.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }                                        

    private void mn_transaksiActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
    }                                            

    private void mn_userActionPerformed(java.awt.event.ActionEvent evt) {                                        
        JOptionPane.showMessageDialog(this, "Menu User dipilih.");
    }                                       

    private void mn_produkActionPerformed(java.awt.event.ActionEvent evt) {                                          
        new produk().setVisible(true);
    }                                         

    private void btn_logoutActionPerformed(java.awt.event.ActionEvent evt) {                                           
        login loginFrame = new login(); 
        loginFrame.setVisible(true);

        // Menutup frame saat ini
        this.dispose();
    }                                          

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(users.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(users.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(users.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(users.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new users().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_edit;
    private javax.swing.JButton btn_enter;
    private javax.swing.JButton btn_logout;
    private javax.swing.JButton btn_searchid;
    private javax.swing.JButton btn_searchuser;
    private javax.swing.JComboBox<String> cmb_role;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem mn_produk;
    private javax.swing.JMenuItem mn_transaksi;
    private javax.swing.JMenuItem mn_user;
    private javax.swing.JTable tbl_user;
    private javax.swing.JTextField txt_fullname;
    private javax.swing.JTextField txt_iduser;
    private javax.swing.JPasswordField txt_password;
    private javax.swing.JTextField txt_username;
    // End of variables declaration                   
}
